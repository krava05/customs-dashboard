import os
import streamlit as st
from google.cloud import bigquery
import pandas as pd
from google.oauth2 import service_account

# --- –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ü–ê–†–û–õ–Ø ---
def check_password():
    def password_entered():
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ß–∏—Ç–∞–µ–º –ø–∞—Ä–æ–ª—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∞ –Ω–µ –∏–∑ st.secrets
        if st.session_state["password"] == os.environ.get("APP_PASSWORD"):
            st.session_state["password_correct"] = True
            del st.session_state["password"]
        else:
            st.session_state["password_correct"] = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø–∞—Ä–æ–ª–µ–º
    if not os.environ.get("APP_PASSWORD"):
        st.error("–ü–∞—Ä–æ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!")
        return False

    if "password_correct" not in st.session_state:
        st.text_input("–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø—É", type="password", on_change=password_entered, key="password")
        return False
    elif not st.session_state["password_correct"]:
        st.error("üòï –ü–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        st.text_input("–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø—É", type="password", on_change=password_entered, key="password")
        return False
    else:
        return True

# --- –û–°–ù–û–í–ù–û–ô –ö–û–î –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
if check_password():
    PROJECT_ID = "ua-customs-analytics"
    TABLE_ID = f"{PROJECT_ID}.ua_customs_data.declarations"

    # --- –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø (–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø) ---
    try:
        client = bigquery.Client(project=PROJECT_ID)
        st.session_state['client_ready'] = True
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ Google: {e}")
        st.session_state['client_ready'] = False

    # --- –§–£–ù–ö–¶–Ü–Ø –î–õ–Ø –ó–ê–ì–†–£–ó–ö–ò –î–ê–ù–ù–´–• ---
    @st.cache_data
    def load_data(query):
        if st.session_state.get('client_ready', False):
            try:
                df = client.query(query).to_dataframe()
                return df
            except Exception as e:
                st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ BigQuery: {e}")
                return pd.DataFrame()
        return pd.DataFrame()
    
    # --- –ò–ù–¢–ï–†–§–ï–ô–° ---
    if st.session_state.get('client_ready', False):
        st.set_page_config(layout="wide")
        st.title("–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ú–∏—Ç–Ω–∏—Ö –î–∞–Ω–∏—Ö")
        st.sidebar.header("–§—ñ–ª—å—Ç—Ä–∏")
        nazva_kompanii = st.sidebar.text_input("–ù–∞–∑–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—ó")
        kod_yedrpou = st.sidebar.text_input("–ö–æ–¥ –Ñ–î–†–ü–û–£")
        kraina_partner = st.sidebar.text_input("–ö—Ä–∞—ó–Ω–∞-–ø–∞—Ä—Ç–Ω–µ—Ä")
        kod_uktzed = st.sidebar.text_input("–ö–æ–¥ –£–ö–¢–ó–ï–î")
        direction = st.sidebar.selectbox("–ù–∞–ø—Ä—è–º–æ–∫", ["–í—Å–µ", "–Ü–º–ø–æ—Ä—Ç", "–ï–∫—Å–ø–æ—Ä—Ç"])
        query = f"SELECT * FROM `{TABLE_ID}` WHERE 1=1"
        if nazva_kompanii: query += f" AND LOWER(nazva_kompanii) LIKE LOWER('%{nazva_kompanii}%')"
        if kod_yedrpou: query += f" AND kod_yedrpou LIKE '%{kod_yedrpou}%'"
        if kraina_partner: query += f" AND LOWER(kraina_partner) LIKE LOWER('%{kraina_partner}%')"
        if kod_uktzed: query += f" AND kod_uktzed LIKE '%{kod_uktzed}%'"
        if direction != "–í—Å–µ": query += f" AND napryamok = '{direction}'"
        query += " LIMIT 5000"
        df = load_data(query)
        if not df.empty:
            st.success(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å—ñ–≤ (–ø–æ–∫–∞–∑–∞–Ω–æ –¥–æ 5000)")
            df['mytna_vartist_hrn'] = pd.to_numeric(df['mytna_vartist_hrn'], errors='coerce')
            df['vaha_netto_kg'] = pd.to_numeric(df['vaha_netto_kg'], errors='coerce')
            total_value = df['mytna_vartist_hrn'].sum()
            total_weight = df['vaha_netto_kg'].sum()
            col1, col2 = st.columns(2)
            col1.metric("–ó–∞–≥–∞–ª—å–Ω–∞ –º–∏—Ç–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å, –≥—Ä–Ω", f"{total_value:,.2f}")
            col2.metric("–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞–≥–∞, –∫–≥", f"{total_weight:,.2f}")
            st.dataframe(df)
        else:
            st.warning("–ó–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
