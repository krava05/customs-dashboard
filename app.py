import os
import streamlit as st
from google.cloud import bigquery
import pandas as pd
import google.generativeai as genai
import json

print("--- DEBUG: –°–∫—Ä–∏–ø—Ç app.py –Ω–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è ---")

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶–´ ---
try:
    st.set_page_config(
        page_title="–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ú–∏—Ç–Ω–∏—Ö –î–∞–Ω–∏—Ö",
        layout="wide",
        initial_sidebar_state="expanded"
    )
    print("--- DEBUG: st.set_page_config() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ ---")
except Exception as e:
    print(f"--- CRITICAL ERROR on set_page_config: {e} ---")

# --- –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ---
PROJECT_ID = "ua-customs-analytics"
TABLE_ID = f"{PROJECT_ID}.ua_customs_data.declarations"
print(f"--- DEBUG: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. PROJECT_ID: {PROJECT_ID} ---")

# --- –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ü–ê–†–û–õ–Ø ---
def check_password():
    print("--- DEBUG: –í—Ö–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏—é check_password() ---")
    def password_entered():
        print("--- DEBUG: –í—Ö–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏—é password_entered() ---")
        if os.environ.get('K_SERVICE'):
            correct_password = os.environ.get("APP_PASSWORD")
        else:
            correct_password = st.secrets.get("APP_PASSWORD")

        if st.session_state.get("password") and st.session_state["password"] == correct_password:
            st.session_state["password_correct"] = True
            del st.session_state["password"]
            print("--- DEBUG: –ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π ---")
        else:
            st.session_state["password_correct"] = False
            print("--- DEBUG: –ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π ---")

    if st.session_state.get("password_correct", False):
        print("--- DEBUG: check_password() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True (–ø–∞—Ä–æ–ª—å —É–∂–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω) ---")
        return True

    st.text_input(
        "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø—É", type="password", on_change=password_entered, key="password"
    )
    if "password_correct" in st.session_state and not st.session_state["password_correct"]:
        st.error("üòï –ü–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π.")
    print("--- DEBUG: check_password() –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è ---")
    return False

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–õ–ò–ï–ù–¢–û–í GOOGLE ---
def initialize_clients():
    print("--- DEBUG: –í—Ö–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏—é initialize_clients() ---")
    if 'clients_initialized' in st.session_state:
        print("--- DEBUG: –ö–ª–∏–µ–Ω—Ç—ã —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, –≤—ã—Ö–æ–¥. ---")
        return

    try:
        print("--- DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è (K_SERVICE)... ---")
        if os.environ.get('K_SERVICE'):
            print("--- DEBUG: –ó–∞–ø—É—Å–∫ –≤ Cloud Run. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BigQuery –∫–ª–∏–µ–Ω—Ç–∞... ---")
            st.session_state.bq_client = bigquery.Client(project=PROJECT_ID)
            print("--- DEBUG: BigQuery –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. ---")
            
            api_key = os.environ.get("GOOGLE_AI_API_KEY")
            if not api_key:
                 print("--- DEBUG ERROR: GOOGLE_AI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. ---")
                 st.session_state.genai_ready = False
            else:
                print("--- DEBUG: API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ genai... ---")
                genai.configure(api_key=api_key)
                st.session_state.genai_ready = True
                print("--- DEBUG: genai —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. ---")
        else: 
            print("--- DEBUG: –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é. ---")
            # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞...

        st.session_state.clients_initialized = True
        st.session_state.client_ready = True
        print("--- DEBUG: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. ---")

    except Exception as e:
        print(f"--- CRITICAL ERROR in initialize_clients: {e} ---")
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ Google: {e}")
        st.session_state.client_ready = False
        st.session_state.genai_ready = False

# --- (–û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
@st.cache_data(ttl=600)
def run_query(query):
    # ...
    return
def get_ai_search_query(user_query, max_items=100):
    # ...
    return

# --- –û–°–ù–û–í–ù–û–ô –ò–ù–¢–ï–†–§–ï–ô–° –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
print("--- DEBUG: –ù–∞—á–∞–ª–æ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ---")
if not check_password():
    st.stop()

print("--- DEBUG: –ü–∞—Ä–æ–ª—å –ø—Ä–æ—à–µ–ª. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤... ---")
initialize_clients()

if not st.session_state.get('client_ready', False):
    print("--- DEBUG ERROR: –ö–ª–∏–µ–Ω—Ç –Ω–µ –≥–æ—Ç–æ–≤. –û—Å—Ç–∞–Ω–æ–≤–∫–∞. ---")
    st.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ Google BigQuery.")
    st.stop()

print("--- DEBUG: –ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤. –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞... ---")
st.title("–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ú–∏—Ç–Ω–∏—Ö –î–∞–Ω–∏—Ö üìà")
# ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
print("--- DEBUG: –°–∫—Ä–∏–ø—Ç –¥–æ—à–µ–ª –¥–æ –∫–æ–Ω—Ü–∞ ---")
